<?xml version="1.0"?>

<project name='vino-docker' default='dist' xmlns:ivy='antlib:org.apache.ivy.ant'>

   <property environment="env"/>
   <import file='${env.ANT_TOOLS_HOME}/ant.init.xml'/>

   <dirname property="vino-docker.dir" file="${ant.file.vino-docker}"/>
   <property name="vino-node-red-nodes-dir" location='${dist.root}/project/vino-node-red-nodes/${build.mode}/tmp/vino-node-red-nodes'/>
   <property name="vino-core-nodes-dir" location='${dist.root}/project/vino-core-nodes/${build.mode}/tmp/vino-core-nodes'/>
   <property name="vino-core-dir" location='${dist.root}/project/vino-core/${build.mode}'/>

   <target name='vino-docker'>
      <subant inheritrefs='false' target='dist'>
         <fileset dir='${vino-docker.dir}' includes='build.xml'/>
      </subant>
   </target>

   <target name='dist'>
      <uptodate property='up-to-date' targetfile='${tmp.dir}/${ant.project.name}.built.at'>
         <srcfiles dir='${basedir}' includes='**/*'/>
      </uptodate>
      <if>
         <not>
            <isset property='up-to-date'/>
         </not>
         <then>
            <antcall target='distribute'/>
            <mkdir dir='${tmp.dir}'/>
            <touch file='${tmp.dir}/${ant.project.name}.built.at'/>
         </then>
         <else>
            <echo message='${ant.project.name} already up to date'/>
         </else>
      </if>
   </target>

   <target name='distribute' depends='deps, dist.docker'/>

   <target name='deps'>
      <build.dependent.library dir='lib/lib-java-web-ui'/>
      <build.dependent.library dir='components/vino-node-red-nodes'/>
      <build.dependent.library dir='components/vino-core-nodes'/>
      <build.dependent.library dir='components/vino-core'/>
      <build.dependent.library dir='components/abacus-postgres'/>
   </target>


   <target name='dist.docker' depends='vino-docker.docker, db.docker, nginx.docker, keycloak.docker, docker.build'/>

   <target name="db.docker">
       <!-- prepare the database image build location -->
       <copy todir="${docker-prep.dir}">
           <fileset dir="${image.dir}/../../../vino-docker/${build.mode}/image/"/>
           <fileset dir="${image.dir}/../../../abacus-postgres/${build.mode}/image/"/>
       </copy>
   </target>

   <target name="nginx.docker">
       <!-- prepare the nginx image build location -->
       <copy todir="${docker-prep.dir}">
           <fileset dir="${image.dir}/../../../vino-docker/${build.mode}/image/"/>
       </copy>
   </target>


   <target name="keycloak.docker">
       <copy todir="${docker-prep.dir}">
           <fileset dir="${image.dir}/../../../vino-docker/${build.mode}/image/"/>
       </copy>
       <copy todir="${docker-prep.dir}/vino-core">
           <fileset dir="${vino-core-dir}/image/vino-core">
               <include name="**/*"/>
           </fileset>
       </copy>
   </target>

   <target name="vino-docker.docker" depends="common.dist.prepare">
       <copy todir="${docker-prep.dir}/vino-core/">
          <fileset dir="${vino-core-dir}/tmp/npm/npm.build/dist"/>
       </copy>
       <copy todir="${docker-prep.dir}/vino-core">
          <fileset dir="${vino-core-dir}/image/vino-core">
              <include name="**/*"/>
          </fileset>
       </copy>
        <copy todir="${docker-prep.dir}/vino-core">
            <fileset dir="${vino-core-dir}/tmp/npm/npm.build">
                <include name="*.tgz"/>
            </fileset>
        </copy>
        <copy todir="${image.dir}/vino-core/nodes/abacus">
            <fileset dir="${tree.top}/lib/abacus-nodelib-util/src/main/js/nodes">
                <include name="**/*"/>
            </fileset>
        </copy>
        
        <copy todir="${image.dir}/vino-core/web">
            <fileset dir="${image.dir}/../../../lib-java-web-ui/${build.mode}/image/lib-java-web-ui/web">
                <include name="**/*"/>
            </fileset>
        </copy>
        <!-- prepare the ViNO image build location -->
        <copy todir="${docker-prep.dir}">
            <fileset dir="${image.dir}/../../../vino-docker/${build.mode}/image/"/>
        </copy>
   </target>

</project>
